Feel free to change or remove this file, it is informational only.

Repo layout
===========
php/ - Externally exposed php code goes here
libs/ - Additional libraries
misc/ - For not-externally exposed php code
../data - For persistent data (full path in environment var: OPENSHIFT_DATA_DIR)
deplist.txt - list of pears to install
.openshift/action_hooks/pre_build - Script that gets run every git push before the build
.openshift/action_hooks/build - Script that gets run every git push as part of the build process (on the CI system if available)
.openshift/action_hooks/deploy - Script that gets run every git push after build but before the app is restarted
.openshift/action_hooks/post_deploy - Script that gets run every git push after the app is restarted


Notes about layout
==================
Please leave php, libs and data directories but feel free to create additional
directories if needed.

Note: Every time you push, everything in your remote repo dir gets recreated
please store long term items (like an sqlite database) in ../data which will
persist between pushes of your repo.


Environment Variables
=====================

OpenShift provides several environment variables to reference for ease
of use.  The following list are some common variables but far from exhaustive:

    getenv('OPENSHIFT_APP_NAME')  - Application name
    getenv('OPENSHIFT_DATA_DIR')  - For persistent storage (between pushes)
    getenv('OPENSHIFT_TMP_DIR')   - Temp storage (unmodified files deleted after 10 days)

When embedding a database using 'rhc cartridge add', you can reference environment
variables for username, host and password:

    getenv('OPENSHIFT_MYSQL_DB_HOST')      - DB host
    getenv('OPENSHIFT_MYSQL_DB_PORT')      - DB Port
    getenv('OPENSHIFT_MYSQL_DB_USERNAME')  - DB Username
    getenv('OPENSHIFT_MYSQL_DB_PASSWORD')  - DB Password

To get a full list of environment variables, simply add a line in your
.openshift/action_hooks/build script that says "export" and push.

deplist.txt
===========

A list of pears to install, line by line on the server.  This will happen when
the user git pushes.


Additional information
======================

Link to additional information will be here, when we have it :)
